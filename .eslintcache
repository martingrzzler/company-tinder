[{"D:\\home\\work\\ambivation\\company-tinder\\src\\index.tsx":"1","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\App.tsx":"2","D:\\home\\work\\ambivation\\company-tinder\\src\\domain\\Company.ts":"3","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Import.tsx":"4","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Card.tsx":"5","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Close.tsx":"6","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Tick.tsx":"7","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Sidebar.tsx":"8","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Item.tsx":"9"},{"size":234,"mtime":1612007434872,"results":"10","hashOfConfig":"11"},{"size":1427,"mtime":1612026262236,"results":"12","hashOfConfig":"11"},{"size":851,"mtime":1612026106956,"results":"13","hashOfConfig":"11"},{"size":1335,"mtime":1612026731435,"results":"14","hashOfConfig":"11"},{"size":1075,"mtime":1612017519870,"results":"15","hashOfConfig":"11"},{"size":860,"mtime":1612015313253,"results":"16","hashOfConfig":"11"},{"size":610,"mtime":1612015708395,"results":"17","hashOfConfig":"11"},{"size":791,"mtime":1612026705953,"results":"18","hashOfConfig":"11"},{"size":215,"mtime":1612020641490,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"199r3ry",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\home\\work\\ambivation\\company-tinder\\src\\index.tsx",[],["45","46"],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\App.tsx",["47","48","49"],"import React, { useState } from 'react';\r\nimport { Company, State, initial, generateCompanies } from '../domain/Company';\r\nimport { Card } from './Card';\r\nimport { Import } from './Import';\r\nimport { Sidebar } from './Sidebar';\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [companies, setCompanies] = useState(generateCompanies(10));\r\n\r\n    const onChange = (id: string, state: State) => {\r\n        const updatedCompanies = companies.map(c => {\r\n            if (c.id == id) {\r\n               c.state = state;\r\n            }\r\n            return c;\r\n        });\r\n        setCompanies(updatedCompanies);\r\n    }\r\n\r\n    const renderCards = () => {\r\n        return companies.map(company => {\r\n            return <Card\r\n                    onNegative={() => onChange(company.id, State.NEGATIVE)}\r\n                    onPositve={() => onChange(company.id, State.POSITIVE)}\r\n                    name={company.name}\r\n                    key={company.id}\r\n                    state={company.state}\r\n                    />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"header\">Company Tinder</div>\r\n            <Sidebar companies={companies} />\r\n            <div className=\"content\">\r\n                <Import setCompanies={setCompanies} />\r\n                <div className=\"cards\">\r\n                    {renderCards()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\domain\\Company.ts",["50"],"import { v4 as uuid } from 'uuid';\r\nimport faker from 'faker';\r\nimport { CommonOptions } from 'child_process';\r\n\r\nexport interface Company {\r\n    id: string;\r\n    name: string;\r\n    state: State;\r\n}\r\n\r\nexport enum State {\r\n    POSITIVE,\r\n    NEGATIVE,\r\n    NEUTRAL\r\n}\r\n\r\n\r\nexport const initial: Company[] = [\r\n    { name: 'Tinder', state: State.NEUTRAL, id: uuid() },\r\n    { name: 'Ambivation', state: State.NEUTRAL, id: uuid() },\r\n    { name: 'Google', state: State.NEUTRAL, id: uuid() },\r\n    { name: 'Tesla', state: State.NEUTRAL, id: uuid() }\r\n];\r\n\r\nexport function generateCompanies(n: number) {\r\n    const companies: Company[] = [];\r\n    for(let i = 0; i < n; i++) {\r\n        companies[i] = {\r\n            name: faker.company.companyName(),\r\n            state: State.NEUTRAL,\r\n            id: uuid()\r\n        }\r\n    }\r\n\r\n    return companies;\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Import.tsx",["51"],"import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Company, State } from '../domain/Company';\r\n\r\ninterface Props {\r\n    setCompanies: Function;\r\n}\r\n\r\nexport const Import = ({ setCompanies }: Props) => {\r\n\r\n    const [data, setData] = useState('');\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(!data) return;\r\n\r\n        let names: string[] = [];\r\n\r\n        if(/.+\\n/g.test(data)) {\r\n            names = data.split('\\n').filter(c => c != '');\r\n        } \r\n        else if(/.+,/g.test(data)) {\r\n            names = data.split(',');\r\n        }\r\n        else {\r\n            throw new Error('Invalid Input')\r\n        }\r\n        \r\n        const companies = names.map((name): Company  => {\r\n            return {\r\n                name,\r\n                state: State.NEUTRAL,\r\n                id: uuid()\r\n            }\r\n        });\r\n        setCompanies(companies);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"import\">\r\n            <textarea \r\n                value={data} \r\n                onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setData(e.target.value)} \r\n                className=\"input\">\r\n            </textarea>\r\n            <button className=\"start\">Start</button>\r\n        </form>\r\n    );\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Card.tsx",["52"],"import React, { MouseEvent } from 'react';\r\nimport { Company, State } from '../domain/Company';\r\nimport { Close } from './svg/Close';\r\nimport { Tick } from './svg/Tick';\r\n\r\ninterface Props {\r\n    onPositve: (event: MouseEvent) => void;\r\n    onNegative: (event: MouseEvent) => void;\r\n    name: string;\r\n    state: State;\r\n}\r\n\r\nexport const Card = ({ name, onNegative, onPositve, state }: Props) => {\r\n\r\n    const backgroundColor = () => {\r\n        switch (state) {\r\n            case State.NEUTRAL:\r\n                return '#fff';\r\n            case State.POSITIVE:\r\n                return 'green';\r\n            case State.NEGATIVE:\r\n                return 'red';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: backgroundColor() }} className=\"card\">\r\n            <div className=\"actions\">\r\n                <Close onClick={onNegative} width={30} height={30} />\r\n                <Tick onClick={onPositve} width={35} height={35} />\r\n            </div>\r\n            <h2>{name}</h2>\r\n        </div>\r\n    );\r\n};","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Close.tsx",[],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Tick.tsx",[],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Sidebar.tsx",["53","54"],"import React from 'react';\r\nimport { Company, State } from '../domain/Company';\r\nimport { Item } from './Item';\r\n\r\ninterface Props {\r\n    companies: Company[];\r\n}\r\n\r\nexport const Sidebar = ({ companies }: Props) => {\r\n    \r\n    const renderItems = (state: State) => {\r\n        return companies.map(c => {\r\n            if (c.state == state) {\r\n                return <Item key={c.id} name={c.name} />\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"selected\">\r\n                <h2>SELECTED</h2>\r\n                {renderItems(State.POSITIVE)}\r\n            </div>\r\n            <div className=\"tossed\">\r\n                <h2>TRASH</h2>\r\n                {renderItems(State.NEGATIVE)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Item.tsx",[],["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":2,"column":26,"nodeType":"63","messageId":"64","endLine":2,"endColumn":33},{"ruleId":"66","severity":1,"message":"67","line":14,"column":22,"nodeType":"68","messageId":"69","endLine":14,"endColumn":24},{"ruleId":"61","severity":1,"message":"70","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":23},{"ruleId":"66","severity":1,"message":"71","line":20,"column":52,"nodeType":"68","messageId":"69","endLine":20,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":12,"column":32,"nodeType":"74","messageId":"75","endLine":12,"endColumn":34},{"ruleId":"66","severity":1,"message":"67","line":13,"column":25,"nodeType":"68","messageId":"69","endLine":13,"endColumn":27},{"ruleId":"57","replacedBy":"76"},{"ruleId":"59","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Company' is defined but never used.","Identifier","unusedVar","'initial' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CommonOptions' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["78"],["79"],"no-global-assign","no-unsafe-negation"]