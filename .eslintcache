[{"D:\\home\\work\\ambivation\\company-tinder\\src\\index.tsx":"1","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\App.tsx":"2","D:\\home\\work\\ambivation\\company-tinder\\src\\domain\\Company.ts":"3","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Import.tsx":"4","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Card.tsx":"5","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Close.tsx":"6","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Tick.tsx":"7","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Sidebar.tsx":"8","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Item.tsx":"9"},{"size":234,"mtime":1612007434872,"results":"10","hashOfConfig":"11"},{"size":1427,"mtime":1612026262236,"results":"12","hashOfConfig":"11"},{"size":851,"mtime":1612026106956,"results":"13","hashOfConfig":"11"},{"size":1359,"mtime":1612025457997,"results":"14","hashOfConfig":"11"},{"size":1075,"mtime":1612017519870,"results":"15","hashOfConfig":"11"},{"size":860,"mtime":1612015313253,"results":"16","hashOfConfig":"11"},{"size":610,"mtime":1612015708395,"results":"17","hashOfConfig":"11"},{"size":780,"mtime":1612020198269,"results":"18","hashOfConfig":"11"},{"size":215,"mtime":1612020641490,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"199r3ry",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\home\\work\\ambivation\\company-tinder\\src\\index.tsx",[],["42","43"],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\App.tsx",["44","45","46"],"D:\\home\\work\\ambivation\\company-tinder\\src\\domain\\Company.ts",["47"],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Import.tsx",["48"],"import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Company, State } from '../domain/Company';\r\n\r\ninterface Props {\r\n    setCompanies: Function;\r\n}\r\n\r\nexport const Import = ({ setCompanies }: Props) => {\r\n\r\n    const [data, setData] = useState('');\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if(!data) return;\r\n\r\n        let names: string[] = [];\r\n\r\n        if(/[A-Z,a-z,1-9]+\\n/g.test(data)) {\r\n            names = data.split('\\n').filter(c => c != '');\r\n        } \r\n        else if(/[A-Z,a-z,1-9]+,/g.test(data)) {\r\n            names = data.split(',');\r\n        }\r\n        else {\r\n            throw new Error('Invalid Input')\r\n        }\r\n        \r\n        const companies = names.map((name): Company  => {\r\n            return {\r\n                name,\r\n                state: State.NEUTRAL,\r\n                id: uuid()\r\n            }\r\n        });\r\n        setCompanies(companies);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"import\">\r\n            <textarea \r\n                value={data} \r\n                onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setData(e.target.value)} \r\n                className=\"input\">\r\n            </textarea>\r\n            <button className=\"start\">Start</button>\r\n        </form>\r\n    );\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Card.tsx",["49"],"import React, { MouseEvent } from 'react';\r\nimport { Company, State } from '../domain/Company';\r\nimport { Close } from './svg/Close';\r\nimport { Tick } from './svg/Tick';\r\n\r\ninterface Props {\r\n    onPositve: (event: MouseEvent) => void;\r\n    onNegative: (event: MouseEvent) => void;\r\n    name: string;\r\n    state: State;\r\n}\r\n\r\nexport const Card = ({ name, onNegative, onPositve, state }: Props) => {\r\n\r\n    const backgroundColor = () => {\r\n        switch (state) {\r\n            case State.NEUTRAL:\r\n                return '#fff';\r\n            case State.POSITIVE:\r\n                return 'green';\r\n            case State.NEGATIVE:\r\n                return 'red';\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: backgroundColor() }} className=\"card\">\r\n            <div className=\"actions\">\r\n                <Close onClick={onNegative} width={30} height={30} />\r\n                <Tick onClick={onPositve} width={35} height={35} />\r\n            </div>\r\n            <h2>{name}</h2>\r\n        </div>\r\n    );\r\n};","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Close.tsx",[],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\svg\\Tick.tsx",[],"D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Sidebar.tsx",["50","51"],"import React from 'react';\r\nimport { Company, State } from '../domain/Company';\r\nimport { Item } from './Item';\r\n\r\ninterface Props {\r\n    companies: Company[];\r\n}\r\n\r\nexport const Sidebar = ({ companies }: Props) => {\r\n    \r\n    const renderItems = (state: State) => {\r\n        return companies.map(c => {\r\n            if (c.state == state) {\r\n                return <Item name={c.name} />\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"selected\">\r\n                <h2>SELECTED</h2>\r\n                {renderItems(State.POSITIVE)}\r\n            </div>\r\n            <div className=\"tossed\">\r\n                <h2>TRASH</h2>\r\n                {renderItems(State.NEGATIVE)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\home\\work\\ambivation\\company-tinder\\src\\components\\Item.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":17},{"ruleId":"56","severity":1,"message":"60","line":2,"column":26,"nodeType":"58","messageId":"59","endLine":2,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":14,"column":22,"nodeType":"63","messageId":"64","endLine":14,"endColumn":24},{"ruleId":"56","severity":1,"message":"65","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":23},{"ruleId":"61","severity":1,"message":"66","line":20,"column":52,"nodeType":"63","messageId":"64","endLine":20,"endColumn":54},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":12,"column":32,"nodeType":"69","messageId":"70","endLine":12,"endColumn":34},{"ruleId":"61","severity":1,"message":"62","line":13,"column":25,"nodeType":"63","messageId":"64","endLine":13,"endColumn":27},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'Company' is defined but never used.","Identifier","unusedVar","'initial' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CommonOptions' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]